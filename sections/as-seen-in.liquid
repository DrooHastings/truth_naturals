<div class="icns-wth-txt--wrap as-seen">
 {% if block.settings.txt != empty %}
   <h3 class="icns-wth-txt--txt">{{ section.settings.headline }}</h3>
 {% endif %}
 <div class="swiper-container icns-wth-txt-container">
   <div class="swiper-wrapper">
     {% for block in section.blocks %}
       <div class="icns-wth-txt--itm swiper-slide flex-centered">
         {% if block.settings.image or block.settings.svg != empty %}
           {% if section.settings.large_img %}
             <div class="icns-wth-txt--img-wrp_lg">
           {% else %}
             <div class="icns-wth-txt--img-wrp">
           {% endif %}
               {% case block.settings.image_type %}
                 {% when 'image' %}
                   {% if block.settings.image %}
                     <img src="{{ block.settings.image | img_url: 'master' }}" alt="{{ block.settings.image.alt }}" class="icns-wth-txt--img">
                   {% endif %}
                 {% when 'svg' %}
                   {% if block.settings.svg != empty %}
                     {{ block.settings.svg }}
                   {% endif %}
               {% endcase %}
             </div>
         {% endif %}
       </div>
     {% endfor %}
   </div>
     <div class="swiper-button-prev"></div>
     <div class="swiper-button-next"></div>
 </div>
</div>

<script>

var mySwiper_{{ section.id }} = undefined;

 document.addEventListener("DOMContentLoaded", function() {
   let sectionId = '#' + 'shopify-section-' + '{{ section.id }}' ;
   let sectionChild = $(sectionId ).children('div.as-seen').find('div.swiper-wrapper');
   let dynamicWidth = findDynamicWidth();

   function findDynamicWidth(){
     let width;
     let count = 0;
     $(sectionChild).children('.swiper-slide').each(function () {
       console.log($(this)); //log every element found to console output
       count ++;
       width = 100 / count;
     });
     return width.toString();
   };
   function setDynamicWidth(width){
     let windowWidth = $(window).width();
     console.log(windowWidth);
     if (windowWidth > 1023) {
       $(sectionChild).children('.swiper-slide').each(function () {
         $(this).css('width', width + '%');
       });
     }
     else {
       $(sectionChild).children('.swiper-slide').each(function () {
         $(this).css('width', windowWidth );
       });
     }
   };setDynamicWidth(dynamicWidth);






   function initSwiper_{{ section.id }}() {
       var screenWidth = $(window).width();
       if(screenWidth <= 1024 && mySwiper_{{ section.id }} == undefined) {
           mySwiper_{{ section.id }} = new Swiper('#shopify-section-{{ section.id }} .icns-wth-txt-container', {
               slidesPerView: 1,
               speed: 300,
               loop: true,
               spaceBetween: 0,
               navigation: {
                 nextEl: '#shopify-section-{{ section.id }} .swiper-button-next',
                 prevEl: '#shopify-section-{{ section.id }} .swiper-button-prev',
               },
           });
       } else if (screenWidth > 1024 && mySwiper_{{ section.id }} != undefined) {
           mySwiper_{{ section.id }}.destroy();
           mySwiper_{{ section.id }} = undefined;
           jQuery('.swiper-wrapper').removeAttr('style');
           jQuery('.swiper-slide').removeAttr('style');
       }
   }

   //Swiper plugin initialization
   initSwiper_{{ section.id }}();

   //Swiper plugin initialization on window resize
   $(window).on('resize', function(){
       initSwiper_{{ section.id }}();
       setDynamicWidth(dynamicWidth);
   });
 });


</script>


<style>
 #shopify-section-{{ section.id }} {
   background-color: {{ section.settings.color_bg }};
   border-color: {{ section.settings.brdr_color }};
 }

 #shopify-section-{{ section.id }} .icns-wth-txt--itm {
   border-top-color: {{ section.settings.brdr_color }};
 }

 #shopify-section-{{ section.id }} svg,
 #shopify-section-{{ section.id }} svg path {
   fill: {{ section.settings.svg_color }};
   stroke: {{ section.settings.svg_color }};
 }

 #shopify-section-{{ section.id }} .icns-wth-txt--txt {
   font-size: {{ section.settings.txt_size_mob }}px;
   color: {{ section.settings.txt_color }};
   font-weight: {{ section.settings.txt_weight }};
   text-align: center;
   padding-top: 30px;
 }

 @media screen and (min-width: 768px) {
   #shopify-section-{{ section.id }} .icns-wth-txt--txt {
     font-size: {{ section.settings.txt_size_desk }}px;
   }
 }
</style>


{% schema %}
{
 "name": "As seen in",
 "class": "icns-wth-txt gd-stl",
 "settings": [
   {
     "id": "headline",
     "type": "text",
     "label": "Headline",
     "default": "As seen in"
   },
   {
     "type":   "color",
     "id":     "color_bg",
     "label":  "Background color",
     "default": "#fff"
   },
   {
     "type":   "color",
     "id":     "brdr_color",
     "label":  "Border",
     "default": "#37404c"
   },
   {
     "type":   "color",
     "id":     "svg_color",
     "label":  "SVG",
     "default": "#000"
   },
   {
    "type": "checkbox",
    "id": "large_img",
    "default": false,
    "label": "Large Images"
   },
   {
     "type": "header",
     "content": "Text"
   },
   {
     "type":   "color",
     "id":     "txt_color",
     "label":  "Text",
     "default": "#231F20"
   },
   {
     "type":     "range",
     "id":       "txt_size_desk",
     "min":       6,
     "max":       106,
     "step":      1,
     "unit":     "px",
     "label":    "Font size on desktop",
     "default":   16
   },
   {
     "type":     "range",
     "id":       "txt_size_mob",
     "min":       6,
     "max":       106,
     "step":      1,
     "unit":     "px",
     "label":    "Font size on mobile",
     "default":   14
   },
   {
     "type": "select",
     "id": "txt_weight",
     "label": "Font weight",
     "options": [
       { "value": "100", "label": "Thin" },
       { "value": "200", "label": "Extra Light" },
       { "value": "300", "label": "Light" },
       { "value": "400", "label": "Normal" },
       { "value": "500", "label": "Medium" },
       { "value": "600", "label": "Semi Bold" },
       { "value": "700", "label": "Bold" },
       { "value": "800", "label": "Extra Bold" },
       { "value": "900", "label": "Black " }
     ],
     "default": "700"
   }
 ],
 "blocks": [
   {
     "type": "image",
     "name": "Image",
     "settings": [
       {
         "type": "select",
         "id": "image_type",
         "label": "Type",
         "options": [
           { "value": "image", "label": "Image" },
           { "value": "svg", "label": "SVG" }
         ],
         "default": "image"
       },
       {
         "type": "image_picker",
         "id": "image",
         "label": "Image"
       },
       {
         "type":   "html",
         "id":     "svg",
         "label":  "SVG"
       }
     ]
   }
 ],
 "presets": [
   {
     "category": "Image",
     "name": "As seen in"
   }
 ]
}
{% endschema %}
